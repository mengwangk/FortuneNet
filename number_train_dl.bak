{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "name": "lotto.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.2"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mengwangk/dl-projects/blob/master/number_train_dl.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "b5243bUj8-K1",
        "toc-hr-collapsed": false
      },
      "source": [
        "# Deep Learning Methods"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TJlGXF6aqzD0",
        "colab_type": "text"
      },
      "source": [
        "## Clone the repo"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uRalr6bZqyZm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "1b87452f-7d39-41f3-e350-0a5ff19602bf"
      },
      "source": [
        "!rm -rf dl-projects\n",
        "!git clone https://github.com/mengwangk/dl-projects\n",
        "!cd dl-projects && ls"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'dl-projects'...\n",
            "remote: Enumerating objects: 205, done.\u001b[K\n",
            "remote: Counting objects:   0% (1/205)   \u001b[K\rremote: Counting objects:   1% (3/205)   \u001b[K\rremote: Counting objects:   2% (5/205)   \u001b[K\rremote: Counting objects:   3% (7/205)   \u001b[K\rremote: Counting objects:   4% (9/205)   \u001b[K\rremote: Counting objects:   5% (11/205)   \u001b[K\rremote: Counting objects:   6% (13/205)   \u001b[K\rremote: Counting objects:   7% (15/205)   \u001b[K\rremote: Counting objects:   8% (17/205)   \u001b[K\rremote: Counting objects:   9% (19/205)   \u001b[K\rremote: Counting objects:  10% (21/205)   \u001b[K\rremote: Counting objects:  11% (23/205)   \u001b[K\rremote: Counting objects:  12% (25/205)   \u001b[K\rremote: Counting objects:  13% (27/205)   \u001b[K\rremote: Counting objects:  14% (29/205)   \u001b[K\rremote: Counting objects:  15% (31/205)   \u001b[K\rremote: Counting objects:  16% (33/205)   \u001b[K\rremote: Counting objects:  17% (35/205)   \u001b[K\rremote: Counting objects:  18% (37/205)   \u001b[K\rremote: Counting objects:  19% (39/205)   \u001b[K\rremote: Counting objects:  20% (41/205)   \u001b[K\rremote: Counting objects:  21% (44/205)   \u001b[K\rremote: Counting objects:  22% (46/205)   \u001b[K\rremote: Counting objects:  23% (48/205)   \u001b[K\rremote: Counting objects:  24% (50/205)   \u001b[K\rremote: Counting objects:  25% (52/205)   \u001b[K\rremote: Counting objects:  26% (54/205)   \u001b[K\rremote: Counting objects:  27% (56/205)   \u001b[K\rremote: Counting objects:  28% (58/205)   \u001b[K\rremote: Counting objects:  29% (60/205)   \u001b[K\rremote: Counting objects:  30% (62/205)   \u001b[K\rremote: Counting objects:  31% (64/205)   \u001b[K\rremote: Counting objects:  32% (66/205)   \u001b[K\rremote: Counting objects:  33% (68/205)   \u001b[K\rremote: Counting objects:  34% (70/205)   \u001b[K\rremote: Counting objects:  35% (72/205)   \u001b[K\rremote: Counting objects:  36% (74/205)   \u001b[K\rremote: Counting objects:  37% (76/205)   \u001b[K\rremote: Counting objects:  38% (78/205)   \u001b[K\rremote: Counting objects:  39% (80/205)   \u001b[K\rremote: Counting objects:  40% (82/205)   \u001b[K\rremote: Counting objects:  41% (85/205)   \u001b[K\rremote: Counting objects:  42% (87/205)   \u001b[K\rremote: Counting objects:  43% (89/205)   \u001b[K\rremote: Counting objects:  44% (91/205)   \u001b[K\rremote: Counting objects:  45% (93/205)   \u001b[K\rremote: Counting objects:  46% (95/205)   \u001b[K\rremote: Counting objects:  47% (97/205)   \u001b[K\rremote: Counting objects:  48% (99/205)   \u001b[K\rremote: Counting objects:  49% (101/205)   \u001b[K\rremote: Counting objects:  50% (103/205)   \u001b[K\rremote: Counting objects:  51% (105/205)   \u001b[K\rremote: Counting objects:  52% (107/205)   \u001b[K\rremote: Counting objects:  53% (109/205)   \u001b[K\rremote: Counting objects:  54% (111/205)   \u001b[K\rremote: Counting objects:  55% (113/205)   \u001b[K\rremote: Counting objects:  56% (115/205)   \u001b[K\rremote: Counting objects:  57% (117/205)   \u001b[K\rremote: Counting objects:  58% (119/205)   \u001b[K\rremote: Counting objects:  59% (121/205)   \u001b[K\rremote: Counting objects:  60% (123/205)   \u001b[K\rremote: Counting objects:  61% (126/205)   \u001b[K\rremote: Counting objects:  62% (128/205)   \u001b[K\rremote: Counting objects:  63% (130/205)   \u001b[K\rremote: Counting objects:  64% (132/205)   \u001b[K\rremote: Counting objects:  65% (134/205)   \u001b[K\rremote: Counting objects:  66% (136/205)   \u001b[K\rremote: Counting objects:  67% (138/205)   \u001b[K\rremote: Counting objects:  68% (140/205)   \u001b[K\rremote: Counting objects:  69% (142/205)   \u001b[K\rremote: Counting objects:  70% (144/205)   \u001b[K\rremote: Counting objects:  71% (146/205)   \u001b[K\rremote: Counting objects:  72% (148/205)   \u001b[K\rremote: Counting objects:  73% (150/205)   \u001b[K\rremote: Counting objects:  74% (152/205)   \u001b[K\rremote: Counting objects:  75% (154/205)   \u001b[K\rremote: Counting objects:  76% (156/205)   \u001b[K\rremote: Counting objects:  77% (158/205)   \u001b[K\rremote: Counting objects:  78% (160/205)   \u001b[K\rremote: Counting objects:  79% (162/205)   \u001b[K\rremote: Counting objects:  80% (164/205)   \u001b[K\rremote: Counting objects:  81% (167/205)   \u001b[K\rremote: Counting objects:  82% (169/205)   \u001b[K\rremote: Counting objects:  83% (171/205)   \u001b[K\rremote: Counting objects:  84% (173/205)   \u001b[K\rremote: Counting objects:  85% (175/205)   \u001b[K\rremote: Counting objects:  86% (177/205)   \u001b[K\rremote: Counting objects:  87% (179/205)   \u001b[K\rremote: Counting objects:  88% (181/205)   \u001b[K\rremote: Counting objects:  89% (183/205)   \u001b[K\rremote: Counting objects:  90% (185/205)   \u001b[K\rremote: Counting objects:  91% (187/205)   \u001b[K\rremote: Counting objects:  92% (189/205)   \u001b[K\rremote: Counting objects:  93% (191/205)   \u001b[K\rremote: Counting objects:  94% (193/205)   \u001b[K\rremote: Counting objects:  95% (195/205)   \u001b[K\rremote: Counting objects:  96% (197/205)   \u001b[K\rremote: Counting objects:  97% (199/205)   \u001b[K\rremote: Counting objects:  98% (201/205)   \u001b[K\rremote: Counting objects:  99% (203/205)   \u001b[K\rremote: Counting objects: 100% (205/205)   \u001b[K\rremote: Counting objects: 100% (205/205), done.\u001b[K\n",
            "remote: Compressing objects: 100% (152/152), done.\u001b[K\n",
            "remote: Total 205 (delta 97), reused 126 (delta 40), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (205/205), 7.83 MiB | 12.14 MiB/s, done.\n",
            "Resolving deltas: 100% (97/97), done.\n",
            "backup\t       lstm_s2.ipynb  number_download.ipynb  scraper\n",
            "datasets       lstm_s3.ipynb  number_features.ipynb  stock.ipynb\n",
            "featurelib     lstm_s4.ipynb  number_train_dl.ipynb\n",
            "LICENSE        lstm_s5.ipynb  number_train_ml.ipynb\n",
            "lstm_s1.ipynb  lstm_s6.ipynb  README.md\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "CQBDKNHCB7gO"
      },
      "source": [
        "## Magic"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "-IIhuSvDcwZy",
        "colab": {}
      },
      "source": [
        "%reload_ext autoreload\n",
        "%autoreload 2\n",
        "\n",
        "%matplotlib inline"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "pdS7XRoicwZ2",
        "colab": {}
      },
      "source": [
        "# To support both python 2 and python 3\n",
        "from __future__ import division, print_function, unicode_literals\n",
        "\n",
        "# Common imports\n",
        "import numpy as np\n",
        "import os\n",
        "import pandas as pd\n",
        "import featuretools as ft\n",
        "import matplotlib as mpl\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "A9eZHyChcwZ4",
        "colab": {}
      },
      "source": [
        "from fastai.basics import *\n",
        "from fastai.tabular import *"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "ugtBDkyVcwZ6"
      },
      "source": [
        "## Setup"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "tc6D3kBScwZ7",
        "colab": {}
      },
      "source": [
        "# to make this notebook's output stable across runs\n",
        "np.random.seed(42)\n",
        "\n",
        "mpl.rc('axes', labelsize=14)\n",
        "mpl.rc('xtick', labelsize=12)\n",
        "mpl.rc('ytick', labelsize=12)\n",
        "\n",
        "# Ignore useless warnings (see SciPy issue #5998)\n",
        "import warnings\n",
        "warnings.filterwarnings(action=\"ignore\", message=\"^internal gelsd\")\n",
        "\n",
        "from IPython.display import display\n",
        "pd.options.display.max_columns = 50\n",
        "pd.options.display.html.table_schema = True"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "qEhj3OF3cwZ9",
        "colab": {}
      },
      "source": [
        "from pathlib import Path\n",
        "\n",
        "DATASET = Path(\"dl-projects/datasets/lotto/data_processed.csv\")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "JigLrfOscwaH"
      },
      "source": [
        "## Load Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "I7frraxZLNzA",
        "colab": {}
      },
      "source": [
        "# Read into data frame\n",
        "dataset = pd.read_csv(DATASET, header=0, sep=',', quotechar='\"')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "57Y-ecp14ZzA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = dataset.copy()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "ZlLHkuqmEeI2",
        "outputId": "9cedb831-1900-4367-ec5a-0de588092fce",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 578
        }
      },
      "source": [
        "df.tail(10)"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 6,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 9569,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 5,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 9,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104663,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 705,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 9,
                  "CumProbaExactMatch": 0.12,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 95,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo1",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 1.31,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 2,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 6223,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 2,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 6,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104664,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 735,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 3,
                  "CumProbaExactMatch": 0.06,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 25,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo10",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 1.17,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 9,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 791,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 7,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 0,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104665,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 613,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 1,
                  "CumProbaExactMatch": 0.11,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 28,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo2",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 2.56,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 1,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 1218,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 2,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 1,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104666,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 1628,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 8,
                  "CumProbaExactMatch": 0.07,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 147,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo3",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 1.38,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 6,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 3669,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 6,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 3,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104667,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 14,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 9,
                  "CumProbaExactMatch": 0.12,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 14,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo4",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 1.33,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 1,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 9517,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 5,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 9,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104668,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 603,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 7,
                  "CumProbaExactMatch": 0.14,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 7,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo5",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 2.25,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 4,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 1844,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 8,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 1,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104669,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 1187,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 4,
                  "CumProbaExactMatch": 0.11,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 15,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo6",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 1.46,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 5,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 5050,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 0,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 5,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104670,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 120,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 0,
                  "CumProbaExactMatch": 0.07,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 120,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo7",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 0.49,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 7,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 9073,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 0,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 9,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104671,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 592,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 3,
                  "CumProbaExactMatch": 0.14,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 0,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo8",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 2.64,
                  "pos_1_3_freq": 10571
                },
                {
                  "DrawDayofweek": 6,
                  "1_7": 11170,
                  "1_6": 11125,
                  "1_5": 10988,
                  "1_4": 11283,
                  "1_3": 11205,
                  "DrawMonth": 6,
                  "1_1": 5573,
                  "0_9": 10950,
                  "0_6": 10814,
                  "0_7": 10962,
                  "0_4": 10946,
                  "0_5": 10857,
                  "0_2": 10908,
                  "0_3": 11165,
                  "0_0": 5531,
                  "1_8": 11058,
                  "pos_2_6_freq": 10525,
                  "pos_2_8_freq": 10431,
                  "DrawDayofyear": 160,
                  "4_8": 10936,
                  "4_9": 10955,
                  "5_7": 10710,
                  "5_6": 10709,
                  "5_5": 5317,
                  "5_9": 10987,
                  "5_8": 10771,
                  "4_6": 10856,
                  "4_7": 10789,
                  "3rd_digit": 7,
                  "4_5": 10717,
                  "pos_3_4_freq": 10504,
                  "LuckyNo": 2976,
                  "pos_4_0_freq": 10498,
                  "pos_4_4_freq": 10504,
                  "2nd_digit": 9,
                  "DaysUntilNextExactMatch": 0,
                  "DrawDay": 9,
                  "1_2": 11199,
                  "0_8": 10880,
                  "pos_3_0_freq": 10499,
                  "1st_digit": 2,
                  "pos_1_2_freq": 10489,
                  "pos_2_9_freq": 10275,
                  "pos_3_1_freq": 10741,
                  "DrawYear": 2019,
                  "8_8": 5408,
                  "8_9": 10835,
                  "index": 104672,
                  "9_9": 5438,
                  "pos_2_5_freq": 10285,
                  "1_9": 11161,
                  "DaysSinceLastExactMatch": 2066,
                  "pos_1_4_freq": 10503,
                  "0_1": 11063,
                  "pos_1_8_freq": 10429,
                  "pos_3_7_freq": 10372,
                  "pos_4_9_freq": 10276,
                  "pos_4_1_freq": 10740,
                  "DrawDate": "2019-06-09",
                  "pos_3_6_freq": 10524,
                  "pos_4_3_freq": 10575,
                  "pos_3_5_freq": 10284,
                  "pos_2_7_freq": 10372,
                  "pos_1_7_freq": 10370,
                  "pos_2_4_freq": 10504,
                  "DrawWeek": 23,
                  "pos_2_2_freq": 10493,
                  "pos_4_6_freq": 10524,
                  "2_8": 10780,
                  "2_9": 10820,
                  "3_3": 5701,
                  "3_5": 11061,
                  "3_4": 11002,
                  "3_7": 11069,
                  "3_6": 10997,
                  "3_9": 11076,
                  "3_8": 10987,
                  "2_2": 5558,
                  "2_3": 11049,
                  "2_4": 11038,
                  "2_5": 10888,
                  "2_6": 10989,
                  "2_7": 10826,
                  "4th_digit": 6,
                  "CumProbaExactMatch": 0.08,
                  "pos_1_6_freq": 10522,
                  "pos_2_0_freq": 10500,
                  "pos_4_7_freq": 10372,
                  "DrawNo": 495819,
                  "pos_3_8_freq": 10431,
                  "DaysSinceLastAnyMatch": 39,
                  "pos_4_2_freq": 10493,
                  "pos_4_8_freq": 10432,
                  "4_4": 5461,
                  "6_6": 5324,
                  "6_7": 10997,
                  "6_8": 10802,
                  "6_9": 10702,
                  "7_9": 10699,
                  "7_8": 10937,
                  "7_7": 5460,
                  "DaysUntilNextAnyMatch": 0,
                  "pos_1_9_freq": 10273,
                  "pos_3_2_freq": 10491,
                  "pos_2_3_freq": 10572,
                  "pos_1_5_freq": 10282,
                  "pos_1_0_freq": 10497,
                  "PrizeType": "SpecialNo9",
                  "pos_4_5_freq": 10282,
                  "pos_2_1_freq": 10739,
                  "pos_3_9_freq": 10276,
                  "pos_3_3_freq": 10574,
                  "pos_1_1_freq": 10737,
                  "CumProbaAnyMatch": 2.32,
                  "pos_1_3_freq": 10571
                }
              ],
              "schema": {
                "fields": [
                  {
                    "type": "integer",
                    "name": "index"
                  },
                  {
                    "type": "integer",
                    "name": "DrawNo"
                  },
                  {
                    "type": "string",
                    "name": "DrawDate"
                  },
                  {
                    "type": "string",
                    "name": "PrizeType"
                  },
                  {
                    "type": "integer",
                    "name": "LuckyNo"
                  },
                  {
                    "type": "integer",
                    "name": "DaysSinceLastExactMatch"
                  },
                  {
                    "type": "integer",
                    "name": "DaysUntilNextExactMatch"
                  },
                  {
                    "type": "integer",
                    "name": "DaysSinceLastAnyMatch"
                  },
                  {
                    "type": "integer",
                    "name": "DaysUntilNextAnyMatch"
                  },
                  {
                    "type": "integer",
                    "name": "1st_digit"
                  },
                  {
                    "type": "integer",
                    "name": "2nd_digit"
                  },
                  {
                    "type": "integer",
                    "name": "3rd_digit"
                  },
                  {
                    "type": "integer",
                    "name": "4th_digit"
                  },
                  {
                    "type": "integer",
                    "name": "DrawYear"
                  },
                  {
                    "type": "integer",
                    "name": "DrawMonth"
                  },
                  {
                    "type": "integer",
                    "name": "DrawWeek"
                  },
                  {
                    "type": "integer",
                    "name": "DrawDay"
                  },
                  {
                    "type": "integer",
                    "name": "DrawDayofweek"
                  },
                  {
                    "type": "integer",
                    "name": "DrawDayofyear"
                  },
                  {
                    "type": "number",
                    "name": "CumProbaExactMatch"
                  },
                  {
                    "type": "number",
                    "name": "CumProbaAnyMatch"
                  },
                  {
                    "type": "integer",
                    "name": "0_1"
                  },
                  {
                    "type": "integer",
                    "name": "0_2"
                  },
                  {
                    "type": "integer",
                    "name": "0_3"
                  },
                  {
                    "type": "integer",
                    "name": "0_4"
                  },
                  {
                    "type": "integer",
                    "name": "0_5"
                  },
                  {
                    "type": "integer",
                    "name": "0_6"
                  },
                  {
                    "type": "integer",
                    "name": "0_7"
                  },
                  {
                    "type": "integer",
                    "name": "0_8"
                  },
                  {
                    "type": "integer",
                    "name": "0_9"
                  },
                  {
                    "type": "integer",
                    "name": "1_2"
                  },
                  {
                    "type": "integer",
                    "name": "1_3"
                  },
                  {
                    "type": "integer",
                    "name": "1_4"
                  },
                  {
                    "type": "integer",
                    "name": "1_5"
                  },
                  {
                    "type": "integer",
                    "name": "1_6"
                  },
                  {
                    "type": "integer",
                    "name": "1_7"
                  },
                  {
                    "type": "integer",
                    "name": "1_8"
                  },
                  {
                    "type": "integer",
                    "name": "1_9"
                  },
                  {
                    "type": "integer",
                    "name": "2_3"
                  },
                  {
                    "type": "integer",
                    "name": "2_4"
                  },
                  {
                    "type": "integer",
                    "name": "2_5"
                  },
                  {
                    "type": "integer",
                    "name": "2_6"
                  },
                  {
                    "type": "integer",
                    "name": "2_7"
                  },
                  {
                    "type": "integer",
                    "name": "2_8"
                  },
                  {
                    "type": "integer",
                    "name": "2_9"
                  },
                  {
                    "type": "integer",
                    "name": "3_4"
                  },
                  {
                    "type": "integer",
                    "name": "3_5"
                  },
                  {
                    "type": "integer",
                    "name": "3_6"
                  },
                  {
                    "type": "integer",
                    "name": "3_7"
                  },
                  {
                    "type": "integer",
                    "name": "3_8"
                  },
                  {
                    "type": "integer",
                    "name": "3_9"
                  },
                  {
                    "type": "integer",
                    "name": "4_5"
                  },
                  {
                    "type": "integer",
                    "name": "4_6"
                  },
                  {
                    "type": "integer",
                    "name": "4_7"
                  },
                  {
                    "type": "integer",
                    "name": "4_8"
                  },
                  {
                    "type": "integer",
                    "name": "4_9"
                  },
                  {
                    "type": "integer",
                    "name": "5_6"
                  },
                  {
                    "type": "integer",
                    "name": "5_7"
                  },
                  {
                    "type": "integer",
                    "name": "5_8"
                  },
                  {
                    "type": "integer",
                    "name": "5_9"
                  },
                  {
                    "type": "integer",
                    "name": "6_7"
                  },
                  {
                    "type": "integer",
                    "name": "6_8"
                  },
                  {
                    "type": "integer",
                    "name": "6_9"
                  },
                  {
                    "type": "integer",
                    "name": "7_8"
                  },
                  {
                    "type": "integer",
                    "name": "7_9"
                  },
                  {
                    "type": "integer",
                    "name": "8_9"
                  },
                  {
                    "type": "integer",
                    "name": "0_0"
                  },
                  {
                    "type": "integer",
                    "name": "1_1"
                  },
                  {
                    "type": "integer",
                    "name": "2_2"
                  },
                  {
                    "type": "integer",
                    "name": "3_3"
                  },
                  {
                    "type": "integer",
                    "name": "4_4"
                  },
                  {
                    "type": "integer",
                    "name": "5_5"
                  },
                  {
                    "type": "integer",
                    "name": "6_6"
                  },
                  {
                    "type": "integer",
                    "name": "7_7"
                  },
                  {
                    "type": "integer",
                    "name": "8_8"
                  },
                  {
                    "type": "integer",
                    "name": "9_9"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_0_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_1_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_2_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_3_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_4_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_5_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_6_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_7_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_8_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_1_9_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_0_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_1_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_2_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_3_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_4_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_5_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_6_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_7_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_8_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_2_9_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_0_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_1_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_2_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_3_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_4_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_5_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_6_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_7_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_8_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_3_9_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_0_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_1_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_2_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_3_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_4_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_5_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_6_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_7_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_8_freq"
                  },
                  {
                    "type": "integer",
                    "name": "pos_4_9_freq"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DrawNo</th>\n",
              "      <th>DrawDate</th>\n",
              "      <th>PrizeType</th>\n",
              "      <th>LuckyNo</th>\n",
              "      <th>DaysSinceLastExactMatch</th>\n",
              "      <th>DaysUntilNextExactMatch</th>\n",
              "      <th>DaysSinceLastAnyMatch</th>\n",
              "      <th>DaysUntilNextAnyMatch</th>\n",
              "      <th>1st_digit</th>\n",
              "      <th>2nd_digit</th>\n",
              "      <th>3rd_digit</th>\n",
              "      <th>4th_digit</th>\n",
              "      <th>DrawYear</th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>CumProbaExactMatch</th>\n",
              "      <th>CumProbaAnyMatch</th>\n",
              "      <th>0_1</th>\n",
              "      <th>0_2</th>\n",
              "      <th>0_3</th>\n",
              "      <th>0_4</th>\n",
              "      <th>0_5</th>\n",
              "      <th>...</th>\n",
              "      <th>pos_2_5_freq</th>\n",
              "      <th>pos_2_6_freq</th>\n",
              "      <th>pos_2_7_freq</th>\n",
              "      <th>pos_2_8_freq</th>\n",
              "      <th>pos_2_9_freq</th>\n",
              "      <th>pos_3_0_freq</th>\n",
              "      <th>pos_3_1_freq</th>\n",
              "      <th>pos_3_2_freq</th>\n",
              "      <th>pos_3_3_freq</th>\n",
              "      <th>pos_3_4_freq</th>\n",
              "      <th>pos_3_5_freq</th>\n",
              "      <th>pos_3_6_freq</th>\n",
              "      <th>pos_3_7_freq</th>\n",
              "      <th>pos_3_8_freq</th>\n",
              "      <th>pos_3_9_freq</th>\n",
              "      <th>pos_4_0_freq</th>\n",
              "      <th>pos_4_1_freq</th>\n",
              "      <th>pos_4_2_freq</th>\n",
              "      <th>pos_4_3_freq</th>\n",
              "      <th>pos_4_4_freq</th>\n",
              "      <th>pos_4_5_freq</th>\n",
              "      <th>pos_4_6_freq</th>\n",
              "      <th>pos_4_7_freq</th>\n",
              "      <th>pos_4_8_freq</th>\n",
              "      <th>pos_4_9_freq</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>104663</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo1</td>\n",
              "      <td>9569</td>\n",
              "      <td>705</td>\n",
              "      <td>0</td>\n",
              "      <td>95</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.31</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104664</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo10</td>\n",
              "      <td>6223</td>\n",
              "      <td>735</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.06</td>\n",
              "      <td>1.17</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104665</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo2</td>\n",
              "      <td>791</td>\n",
              "      <td>613</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.11</td>\n",
              "      <td>2.56</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104666</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo3</td>\n",
              "      <td>1218</td>\n",
              "      <td>1628</td>\n",
              "      <td>0</td>\n",
              "      <td>147</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.38</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104667</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo4</td>\n",
              "      <td>3669</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.33</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104668</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo5</td>\n",
              "      <td>9517</td>\n",
              "      <td>603</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.14</td>\n",
              "      <td>2.25</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104669</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo6</td>\n",
              "      <td>1844</td>\n",
              "      <td>1187</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.11</td>\n",
              "      <td>1.46</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104670</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo7</td>\n",
              "      <td>5050</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.49</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104671</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo8</td>\n",
              "      <td>9073</td>\n",
              "      <td>592</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.14</td>\n",
              "      <td>2.64</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104672</th>\n",
              "      <td>495819</td>\n",
              "      <td>2019-06-09</td>\n",
              "      <td>SpecialNo9</td>\n",
              "      <td>2976</td>\n",
              "      <td>2066</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>6</td>\n",
              "      <td>2019</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>160</td>\n",
              "      <td>0.08</td>\n",
              "      <td>2.32</td>\n",
              "      <td>11063</td>\n",
              "      <td>10908</td>\n",
              "      <td>11165</td>\n",
              "      <td>10946</td>\n",
              "      <td>10857</td>\n",
              "      <td>...</td>\n",
              "      <td>10285</td>\n",
              "      <td>10525</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10275</td>\n",
              "      <td>10499</td>\n",
              "      <td>10741</td>\n",
              "      <td>10491</td>\n",
              "      <td>10574</td>\n",
              "      <td>10504</td>\n",
              "      <td>10284</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10431</td>\n",
              "      <td>10276</td>\n",
              "      <td>10498</td>\n",
              "      <td>10740</td>\n",
              "      <td>10493</td>\n",
              "      <td>10575</td>\n",
              "      <td>10504</td>\n",
              "      <td>10282</td>\n",
              "      <td>10524</td>\n",
              "      <td>10372</td>\n",
              "      <td>10432</td>\n",
              "      <td>10276</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 115 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        DrawNo    DrawDate    PrizeType  LuckyNo  DaysSinceLastExactMatch  \\\n",
              "104663  495819  2019-06-09   SpecialNo1     9569                      705   \n",
              "104664  495819  2019-06-09  SpecialNo10     6223                      735   \n",
              "104665  495819  2019-06-09   SpecialNo2      791                      613   \n",
              "104666  495819  2019-06-09   SpecialNo3     1218                     1628   \n",
              "104667  495819  2019-06-09   SpecialNo4     3669                       14   \n",
              "104668  495819  2019-06-09   SpecialNo5     9517                      603   \n",
              "104669  495819  2019-06-09   SpecialNo6     1844                     1187   \n",
              "104670  495819  2019-06-09   SpecialNo7     5050                      120   \n",
              "104671  495819  2019-06-09   SpecialNo8     9073                      592   \n",
              "104672  495819  2019-06-09   SpecialNo9     2976                     2066   \n",
              "\n",
              "        DaysUntilNextExactMatch  DaysSinceLastAnyMatch  DaysUntilNextAnyMatch  \\\n",
              "104663                        0                     95                      0   \n",
              "104664                        0                     25                      0   \n",
              "104665                        0                     28                      0   \n",
              "104666                        0                    147                      0   \n",
              "104667                        0                     14                      0   \n",
              "104668                        0                      7                      0   \n",
              "104669                        0                     15                      0   \n",
              "104670                        0                    120                      0   \n",
              "104671                        0                      0                      0   \n",
              "104672                        0                     39                      0   \n",
              "\n",
              "        1st_digit  2nd_digit  3rd_digit  4th_digit  DrawYear  DrawMonth  \\\n",
              "104663          9          5          6          9      2019          6   \n",
              "104664          6          2          2          3      2019          6   \n",
              "104665          0          7          9          1      2019          6   \n",
              "104666          1          2          1          8      2019          6   \n",
              "104667          3          6          6          9      2019          6   \n",
              "104668          9          5          1          7      2019          6   \n",
              "104669          1          8          4          4      2019          6   \n",
              "104670          5          0          5          0      2019          6   \n",
              "104671          9          0          7          3      2019          6   \n",
              "104672          2          9          7          6      2019          6   \n",
              "\n",
              "        DrawWeek  DrawDay  DrawDayofweek  DrawDayofyear  CumProbaExactMatch  \\\n",
              "104663        23        9              6            160                0.12   \n",
              "104664        23        9              6            160                0.06   \n",
              "104665        23        9              6            160                0.11   \n",
              "104666        23        9              6            160                0.07   \n",
              "104667        23        9              6            160                0.12   \n",
              "104668        23        9              6            160                0.14   \n",
              "104669        23        9              6            160                0.11   \n",
              "104670        23        9              6            160                0.07   \n",
              "104671        23        9              6            160                0.14   \n",
              "104672        23        9              6            160                0.08   \n",
              "\n",
              "        CumProbaAnyMatch    0_1    0_2    0_3    0_4    0_5  ...  \\\n",
              "104663              1.31  11063  10908  11165  10946  10857  ...   \n",
              "104664              1.17  11063  10908  11165  10946  10857  ...   \n",
              "104665              2.56  11063  10908  11165  10946  10857  ...   \n",
              "104666              1.38  11063  10908  11165  10946  10857  ...   \n",
              "104667              1.33  11063  10908  11165  10946  10857  ...   \n",
              "104668              2.25  11063  10908  11165  10946  10857  ...   \n",
              "104669              1.46  11063  10908  11165  10946  10857  ...   \n",
              "104670              0.49  11063  10908  11165  10946  10857  ...   \n",
              "104671              2.64  11063  10908  11165  10946  10857  ...   \n",
              "104672              2.32  11063  10908  11165  10946  10857  ...   \n",
              "\n",
              "        pos_2_5_freq  pos_2_6_freq  pos_2_7_freq  pos_2_8_freq  pos_2_9_freq  \\\n",
              "104663         10285         10525         10372         10431         10275   \n",
              "104664         10285         10525         10372         10431         10275   \n",
              "104665         10285         10525         10372         10431         10275   \n",
              "104666         10285         10525         10372         10431         10275   \n",
              "104667         10285         10525         10372         10431         10275   \n",
              "104668         10285         10525         10372         10431         10275   \n",
              "104669         10285         10525         10372         10431         10275   \n",
              "104670         10285         10525         10372         10431         10275   \n",
              "104671         10285         10525         10372         10431         10275   \n",
              "104672         10285         10525         10372         10431         10275   \n",
              "\n",
              "        pos_3_0_freq  pos_3_1_freq  pos_3_2_freq  pos_3_3_freq  pos_3_4_freq  \\\n",
              "104663         10499         10741         10491         10574         10504   \n",
              "104664         10499         10741         10491         10574         10504   \n",
              "104665         10499         10741         10491         10574         10504   \n",
              "104666         10499         10741         10491         10574         10504   \n",
              "104667         10499         10741         10491         10574         10504   \n",
              "104668         10499         10741         10491         10574         10504   \n",
              "104669         10499         10741         10491         10574         10504   \n",
              "104670         10499         10741         10491         10574         10504   \n",
              "104671         10499         10741         10491         10574         10504   \n",
              "104672         10499         10741         10491         10574         10504   \n",
              "\n",
              "        pos_3_5_freq  pos_3_6_freq  pos_3_7_freq  pos_3_8_freq  pos_3_9_freq  \\\n",
              "104663         10284         10524         10372         10431         10276   \n",
              "104664         10284         10524         10372         10431         10276   \n",
              "104665         10284         10524         10372         10431         10276   \n",
              "104666         10284         10524         10372         10431         10276   \n",
              "104667         10284         10524         10372         10431         10276   \n",
              "104668         10284         10524         10372         10431         10276   \n",
              "104669         10284         10524         10372         10431         10276   \n",
              "104670         10284         10524         10372         10431         10276   \n",
              "104671         10284         10524         10372         10431         10276   \n",
              "104672         10284         10524         10372         10431         10276   \n",
              "\n",
              "        pos_4_0_freq  pos_4_1_freq  pos_4_2_freq  pos_4_3_freq  pos_4_4_freq  \\\n",
              "104663         10498         10740         10493         10575         10504   \n",
              "104664         10498         10740         10493         10575         10504   \n",
              "104665         10498         10740         10493         10575         10504   \n",
              "104666         10498         10740         10493         10575         10504   \n",
              "104667         10498         10740         10493         10575         10504   \n",
              "104668         10498         10740         10493         10575         10504   \n",
              "104669         10498         10740         10493         10575         10504   \n",
              "104670         10498         10740         10493         10575         10504   \n",
              "104671         10498         10740         10493         10575         10504   \n",
              "104672         10498         10740         10493         10575         10504   \n",
              "\n",
              "        pos_4_5_freq  pos_4_6_freq  pos_4_7_freq  pos_4_8_freq  pos_4_9_freq  \n",
              "104663         10282         10524         10372         10432         10276  \n",
              "104664         10282         10524         10372         10432         10276  \n",
              "104665         10282         10524         10372         10432         10276  \n",
              "104666         10282         10524         10372         10432         10276  \n",
              "104667         10282         10524         10372         10432         10276  \n",
              "104668         10282         10524         10372         10432         10276  \n",
              "104669         10282         10524         10372         10432         10276  \n",
              "104670         10282         10524         10372         10432         10276  \n",
              "104671         10282         10524         10372         10432         10276  \n",
              "104672         10282         10524         10372         10432         10276  \n",
              "\n",
              "[10 rows x 115 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fv2PKrt64vqc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "a5262cf8-30e9-4d00-840a-fed3f1f806ce"
      },
      "source": [
        "df.info(verbose=True)"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 104673 entries, 0 to 104672\n",
            "Data columns (total 115 columns):\n",
            "DrawNo                     int64\n",
            "DrawDate                   object\n",
            "PrizeType                  object\n",
            "LuckyNo                    int64\n",
            "DaysSinceLastExactMatch    int64\n",
            "DaysUntilNextExactMatch    int64\n",
            "DaysSinceLastAnyMatch      int64\n",
            "DaysUntilNextAnyMatch      int64\n",
            "1st_digit                  int64\n",
            "2nd_digit                  int64\n",
            "3rd_digit                  int64\n",
            "4th_digit                  int64\n",
            "DrawYear                   int64\n",
            "DrawMonth                  int64\n",
            "DrawWeek                   int64\n",
            "DrawDay                    int64\n",
            "DrawDayofweek              int64\n",
            "DrawDayofyear              int64\n",
            "CumProbaExactMatch         float64\n",
            "CumProbaAnyMatch           float64\n",
            "0_1                        int64\n",
            "0_2                        int64\n",
            "0_3                        int64\n",
            "0_4                        int64\n",
            "0_5                        int64\n",
            "0_6                        int64\n",
            "0_7                        int64\n",
            "0_8                        int64\n",
            "0_9                        int64\n",
            "1_2                        int64\n",
            "1_3                        int64\n",
            "1_4                        int64\n",
            "1_5                        int64\n",
            "1_6                        int64\n",
            "1_7                        int64\n",
            "1_8                        int64\n",
            "1_9                        int64\n",
            "2_3                        int64\n",
            "2_4                        int64\n",
            "2_5                        int64\n",
            "2_6                        int64\n",
            "2_7                        int64\n",
            "2_8                        int64\n",
            "2_9                        int64\n",
            "3_4                        int64\n",
            "3_5                        int64\n",
            "3_6                        int64\n",
            "3_7                        int64\n",
            "3_8                        int64\n",
            "3_9                        int64\n",
            "4_5                        int64\n",
            "4_6                        int64\n",
            "4_7                        int64\n",
            "4_8                        int64\n",
            "4_9                        int64\n",
            "5_6                        int64\n",
            "5_7                        int64\n",
            "5_8                        int64\n",
            "5_9                        int64\n",
            "6_7                        int64\n",
            "6_8                        int64\n",
            "6_9                        int64\n",
            "7_8                        int64\n",
            "7_9                        int64\n",
            "8_9                        int64\n",
            "0_0                        int64\n",
            "1_1                        int64\n",
            "2_2                        int64\n",
            "3_3                        int64\n",
            "4_4                        int64\n",
            "5_5                        int64\n",
            "6_6                        int64\n",
            "7_7                        int64\n",
            "8_8                        int64\n",
            "9_9                        int64\n",
            "pos_1_0_freq               int64\n",
            "pos_1_1_freq               int64\n",
            "pos_1_2_freq               int64\n",
            "pos_1_3_freq               int64\n",
            "pos_1_4_freq               int64\n",
            "pos_1_5_freq               int64\n",
            "pos_1_6_freq               int64\n",
            "pos_1_7_freq               int64\n",
            "pos_1_8_freq               int64\n",
            "pos_1_9_freq               int64\n",
            "pos_2_0_freq               int64\n",
            "pos_2_1_freq               int64\n",
            "pos_2_2_freq               int64\n",
            "pos_2_3_freq               int64\n",
            "pos_2_4_freq               int64\n",
            "pos_2_5_freq               int64\n",
            "pos_2_6_freq               int64\n",
            "pos_2_7_freq               int64\n",
            "pos_2_8_freq               int64\n",
            "pos_2_9_freq               int64\n",
            "pos_3_0_freq               int64\n",
            "pos_3_1_freq               int64\n",
            "pos_3_2_freq               int64\n",
            "pos_3_3_freq               int64\n",
            "pos_3_4_freq               int64\n",
            "pos_3_5_freq               int64\n",
            "pos_3_6_freq               int64\n",
            "pos_3_7_freq               int64\n",
            "pos_3_8_freq               int64\n",
            "pos_3_9_freq               int64\n",
            "pos_4_0_freq               int64\n",
            "pos_4_1_freq               int64\n",
            "pos_4_2_freq               int64\n",
            "pos_4_3_freq               int64\n",
            "pos_4_4_freq               int64\n",
            "pos_4_5_freq               int64\n",
            "pos_4_6_freq               int64\n",
            "pos_4_7_freq               int64\n",
            "pos_4_8_freq               int64\n",
            "pos_4_9_freq               int64\n",
            "dtypes: float64(2), int64(111), object(2)\n",
            "memory usage: 91.8+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "14T0QDkkJRhc"
      },
      "source": [
        "### Field Variables"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "WbUfHTt9JRhd",
        "colab": {}
      },
      "source": [
        "# Outcome to predict\n",
        "dep_var = \"LuckyNo\""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "tIfpzBPOcwaz"
      },
      "source": [
        "### Train and Validation Split"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "migCiR94cwa1",
        "outputId": "6b5a1281-7a03-48e8-de5a-661520b7da72",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "n = len(df_processed); n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "104397"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "BvVWP2DtrN9Z",
        "outputId": "a068576f-8453-4830-f43e-3d4c9dca7407",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "X = df_processed.copy()\n",
        "y = X[dep_var]; \n",
        "print(len(X))\n",
        "print(len(y))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "104397\n",
            "104397\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "57qAI7kvJRhp",
        "outputId": "424e7cb5-69c1-4bb9-9bf3-d75df5b2c26f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        }
      },
      "source": [
        "X.drop([dep_var], inplace=True, axis=1)\n",
        "X.head(1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDate": "1992-05-06T00:00:00.000Z",
                  "DrawDay": 6,
                  "DrawDayofweek": 2,
                  "DrawDayofyear": 127,
                  "DrawElapsed": 705110400,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 40792,
                  "DrawWeek": 19,
                  "DrawYear": 1992,
                  "PrizeType": "1stPrizeNo",
                  "index": 0
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "DrawNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDate",
                    "type": "datetime"
                  },
                  {
                    "name": "PrizeType",
                    "type": "string"
                  },
                  {
                    "name": "DrawYear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawMonth",
                    "type": "integer"
                  },
                  {
                    "name": "DrawWeek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDay",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofweek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofyear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawIs_month_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_month_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawElapsed",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DrawNo</th>\n",
              "      <th>DrawDate</th>\n",
              "      <th>PrizeType</th>\n",
              "      <th>DrawYear</th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>DrawIs_month_end</th>\n",
              "      <th>DrawIs_month_start</th>\n",
              "      <th>DrawIs_quarter_end</th>\n",
              "      <th>DrawIs_quarter_start</th>\n",
              "      <th>DrawIs_year_end</th>\n",
              "      <th>DrawIs_year_start</th>\n",
              "      <th>DrawElapsed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>40792</td>\n",
              "      <td>1992-05-06</td>\n",
              "      <td>1stPrizeNo</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>19</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>127</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>705110400</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   DrawNo   DrawDate   PrizeType  DrawYear  DrawMonth  DrawWeek  DrawDay  \\\n",
              "0   40792 1992-05-06  1stPrizeNo      1992          5        19        6   \n",
              "\n",
              "   DrawDayofweek  DrawDayofyear  DrawIs_month_end  DrawIs_month_start  \\\n",
              "0              2            127             False               False   \n",
              "\n",
              "   DrawIs_quarter_end  DrawIs_quarter_start  DrawIs_year_end  \\\n",
              "0               False                 False            False   \n",
              "\n",
              "   DrawIs_year_start  DrawElapsed  \n",
              "0              False    705110400  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "GZI30urJJRhr",
        "colab": {}
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "H6HgX1BRJRht",
        "outputId": "eddefe12-bd74-4ff9-eac8-862166a1ad14",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "print(len(X_train)); print(len(X_test)); print(len(y_train)); print(len(y_test))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "73077\n",
            "31320\n",
            "73077\n",
            "31320\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "Zj1_wEzXJRhw"
      },
      "source": [
        "### Assignment"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "OzquwRh6rNr5",
        "colab": {}
      },
      "source": [
        "train_df = df_processed"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "o8-_uHW0waOU"
      },
      "source": [
        "## Experiment with a sample"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "9dm_l8Xqs6yq",
        "outputId": "d7a63f23-9597-419e-964a-38d91c2dd4f9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        }
      },
      "source": [
        "train_df.info()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 104397 entries, 0 to 104396\n",
            "Data columns (total 17 columns):\n",
            "DrawNo                  104397 non-null int64\n",
            "DrawDate                104397 non-null datetime64[ns]\n",
            "PrizeType               104397 non-null object\n",
            "LuckyNo                 104397 non-null int64\n",
            "DrawYear                104397 non-null int64\n",
            "DrawMonth               104397 non-null int64\n",
            "DrawWeek                104397 non-null int64\n",
            "DrawDay                 104397 non-null int64\n",
            "DrawDayofweek           104397 non-null int64\n",
            "DrawDayofyear           104397 non-null int64\n",
            "DrawIs_month_end        104397 non-null bool\n",
            "DrawIs_month_start      104397 non-null bool\n",
            "DrawIs_quarter_end      104397 non-null bool\n",
            "DrawIs_quarter_start    104397 non-null bool\n",
            "DrawIs_year_end         104397 non-null bool\n",
            "DrawIs_year_start       104397 non-null bool\n",
            "DrawElapsed             104397 non-null int64\n",
            "dtypes: bool(6), datetime64[ns](1), int64(9), object(1)\n",
            "memory usage: 9.4+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "nP6L7tltrM7U",
        "outputId": "c02be416-e27d-4a26-a635-eb7393dff997",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "idx = np.random.permutation(range(n))[:6000]\n",
        "print(n)\n",
        "print(len(idx))\n",
        "\n",
        "idx.sort()\n",
        "print(idx)\n",
        "\n",
        "small_train_df = train_df.iloc[idx[:3000]]\n",
        "small_test_df = train_df.iloc[idx[3000:]]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "104397\n",
            "6000\n",
            "[    35     87     97    114 ... 104302 104306 104360 104366]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "rfmvFeagrVBe",
        "colab": {}
      },
      "source": [
        "# Set continuous and categorical columns\n",
        "small_cont_vars = [\"DrawNo\", \"DrawElapsed\"]\n",
        "small_cat_vars = [\"PrizeType\", \"DrawYear\", \"DrawMonth\", \"DrawWeek\", \"DrawDay\", \"DrawDayofweek\", \n",
        "                  \"DrawDayofyear\",\"DrawIs_month_end\",\"DrawIs_month_start\", \"DrawIs_quarter_end\", \"DrawIs_quarter_start\", \"DrawIs_year_end\", \"DrawIs_year_start\"]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Ff3NsGryuU2m",
        "colab": {}
      },
      "source": [
        "small_train_df = small_train_df[small_cat_vars + small_cont_vars + [dep_var]]\n",
        "small_test_df = small_test_df[small_cat_vars + small_cont_vars + [dep_var]]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "vraIDuPCur6N",
        "outputId": "7051d826-3a77-4f98-b0dc-6ca82caa9c03",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        }
      },
      "source": [
        "small_train_df.head(5)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDay": 7,
                  "DrawDayofweek": 3,
                  "DrawDayofyear": 128,
                  "DrawElapsed": 705196800,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 40892,
                  "DrawWeek": 19,
                  "DrawYear": 1992,
                  "LuckyNo": 4640,
                  "PrizeType": "ConsolationNo9",
                  "index": 35
                },
                {
                  "DrawDay": 13,
                  "DrawDayofweek": 2,
                  "DrawDayofyear": 134,
                  "DrawElapsed": 705715200,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 41092,
                  "DrawWeek": 20,
                  "DrawYear": 1992,
                  "LuckyNo": 6792,
                  "PrizeType": "SpecialNo5",
                  "index": 87
                },
                {
                  "DrawDay": 14,
                  "DrawDayofweek": 3,
                  "DrawDayofyear": 135,
                  "DrawElapsed": 705801600,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 41192,
                  "DrawWeek": 20,
                  "DrawYear": 1992,
                  "LuckyNo": 6817,
                  "PrizeType": "ConsolationNo2",
                  "index": 97
                },
                {
                  "DrawDay": 14,
                  "DrawDayofweek": 3,
                  "DrawDayofyear": 135,
                  "DrawElapsed": 705801600,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 41192,
                  "DrawWeek": 20,
                  "DrawYear": 1992,
                  "LuckyNo": 5664,
                  "PrizeType": "SpecialNo9",
                  "index": 114
                },
                {
                  "DrawDay": 17,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 138,
                  "DrawElapsed": 706060800,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 41292,
                  "DrawWeek": 20,
                  "DrawYear": 1992,
                  "LuckyNo": 3573,
                  "PrizeType": "ConsolationNo9",
                  "index": 127
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "PrizeType",
                    "type": "string"
                  },
                  {
                    "name": "DrawYear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawMonth",
                    "type": "integer"
                  },
                  {
                    "name": "DrawWeek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDay",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofweek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofyear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawIs_month_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_month_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawElapsed",
                    "type": "integer"
                  },
                  {
                    "name": "LuckyNo",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PrizeType</th>\n",
              "      <th>DrawYear</th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>DrawIs_month_end</th>\n",
              "      <th>DrawIs_month_start</th>\n",
              "      <th>DrawIs_quarter_end</th>\n",
              "      <th>DrawIs_quarter_start</th>\n",
              "      <th>DrawIs_year_end</th>\n",
              "      <th>DrawIs_year_start</th>\n",
              "      <th>DrawNo</th>\n",
              "      <th>DrawElapsed</th>\n",
              "      <th>LuckyNo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>ConsolationNo9</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>19</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>128</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>40892</td>\n",
              "      <td>705196800</td>\n",
              "      <td>4640</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>SpecialNo5</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>20</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>134</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41092</td>\n",
              "      <td>705715200</td>\n",
              "      <td>6792</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>ConsolationNo2</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>20</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>135</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41192</td>\n",
              "      <td>705801600</td>\n",
              "      <td>6817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>SpecialNo9</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>20</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>135</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41192</td>\n",
              "      <td>705801600</td>\n",
              "      <td>5664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>ConsolationNo9</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>20</td>\n",
              "      <td>17</td>\n",
              "      <td>6</td>\n",
              "      <td>138</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>41292</td>\n",
              "      <td>706060800</td>\n",
              "      <td>3573</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          PrizeType  DrawYear  DrawMonth  DrawWeek  DrawDay  DrawDayofweek  \\\n",
              "35   ConsolationNo9      1992          5        19        7              3   \n",
              "87       SpecialNo5      1992          5        20       13              2   \n",
              "97   ConsolationNo2      1992          5        20       14              3   \n",
              "114      SpecialNo9      1992          5        20       14              3   \n",
              "127  ConsolationNo9      1992          5        20       17              6   \n",
              "\n",
              "     DrawDayofyear  DrawIs_month_end  DrawIs_month_start  DrawIs_quarter_end  \\\n",
              "35             128             False               False               False   \n",
              "87             134             False               False               False   \n",
              "97             135             False               False               False   \n",
              "114            135             False               False               False   \n",
              "127            138             False               False               False   \n",
              "\n",
              "     DrawIs_quarter_start  DrawIs_year_end  DrawIs_year_start  DrawNo  \\\n",
              "35                  False            False              False   40892   \n",
              "87                  False            False              False   41092   \n",
              "97                  False            False              False   41192   \n",
              "114                 False            False              False   41192   \n",
              "127                 False            False              False   41292   \n",
              "\n",
              "     DrawElapsed  LuckyNo  \n",
              "35     705196800     4640  \n",
              "87     705715200     6792  \n",
              "97     705801600     6817  \n",
              "114    705801600     5664  \n",
              "127    706060800     3573  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "clcMP_asuvuB",
        "outputId": "0fdbcda1-957d-44ac-f924-0036502bacc5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        }
      },
      "source": [
        "small_test_df.head(5)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDay": 9,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 190,
                  "DrawElapsed": 1152403200,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 7,
                  "DrawNo": 270006,
                  "DrawWeek": 27,
                  "DrawYear": 2006,
                  "LuckyNo": 8912,
                  "PrizeType": "ConsolationNo9",
                  "index": 52728
                },
                {
                  "DrawDay": 9,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 190,
                  "DrawElapsed": 1152403200,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 7,
                  "DrawNo": 270006,
                  "DrawWeek": 27,
                  "DrawYear": 2006,
                  "LuckyNo": 8476,
                  "PrizeType": "SpecialNo5",
                  "index": 52734
                },
                {
                  "DrawDay": 12,
                  "DrawDayofweek": 2,
                  "DrawDayofyear": 193,
                  "DrawElapsed": 1152662400,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 7,
                  "DrawNo": 270106,
                  "DrawWeek": 28,
                  "DrawYear": 2006,
                  "LuckyNo": 1628,
                  "PrizeType": "ConsolationNo10",
                  "index": 52743
                },
                {
                  "DrawDay": 12,
                  "DrawDayofweek": 2,
                  "DrawDayofyear": 193,
                  "DrawElapsed": 1152662400,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 7,
                  "DrawNo": 270106,
                  "DrawWeek": 28,
                  "DrawYear": 2006,
                  "LuckyNo": 8284,
                  "PrizeType": "ConsolationNo5",
                  "index": 52747
                },
                {
                  "DrawDay": 15,
                  "DrawDayofweek": 5,
                  "DrawDayofyear": 196,
                  "DrawElapsed": 1152921600,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 7,
                  "DrawNo": 270206,
                  "DrawWeek": 28,
                  "DrawYear": 2006,
                  "LuckyNo": 2522,
                  "PrizeType": "ConsolationNo4",
                  "index": 52769
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "PrizeType",
                    "type": "string"
                  },
                  {
                    "name": "DrawYear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawMonth",
                    "type": "integer"
                  },
                  {
                    "name": "DrawWeek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDay",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofweek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofyear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawIs_month_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_month_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawElapsed",
                    "type": "integer"
                  },
                  {
                    "name": "LuckyNo",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PrizeType</th>\n",
              "      <th>DrawYear</th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>DrawIs_month_end</th>\n",
              "      <th>DrawIs_month_start</th>\n",
              "      <th>DrawIs_quarter_end</th>\n",
              "      <th>DrawIs_quarter_start</th>\n",
              "      <th>DrawIs_year_end</th>\n",
              "      <th>DrawIs_year_start</th>\n",
              "      <th>DrawNo</th>\n",
              "      <th>DrawElapsed</th>\n",
              "      <th>LuckyNo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>52728</th>\n",
              "      <td>ConsolationNo9</td>\n",
              "      <td>2006</td>\n",
              "      <td>7</td>\n",
              "      <td>27</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>190</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>270006</td>\n",
              "      <td>1152403200</td>\n",
              "      <td>8912</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52734</th>\n",
              "      <td>SpecialNo5</td>\n",
              "      <td>2006</td>\n",
              "      <td>7</td>\n",
              "      <td>27</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>190</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>270006</td>\n",
              "      <td>1152403200</td>\n",
              "      <td>8476</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52743</th>\n",
              "      <td>ConsolationNo10</td>\n",
              "      <td>2006</td>\n",
              "      <td>7</td>\n",
              "      <td>28</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>193</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>270106</td>\n",
              "      <td>1152662400</td>\n",
              "      <td>1628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52747</th>\n",
              "      <td>ConsolationNo5</td>\n",
              "      <td>2006</td>\n",
              "      <td>7</td>\n",
              "      <td>28</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>193</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>270106</td>\n",
              "      <td>1152662400</td>\n",
              "      <td>8284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52769</th>\n",
              "      <td>ConsolationNo4</td>\n",
              "      <td>2006</td>\n",
              "      <td>7</td>\n",
              "      <td>28</td>\n",
              "      <td>15</td>\n",
              "      <td>5</td>\n",
              "      <td>196</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>270206</td>\n",
              "      <td>1152921600</td>\n",
              "      <td>2522</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             PrizeType  DrawYear  DrawMonth  DrawWeek  DrawDay  DrawDayofweek  \\\n",
              "52728   ConsolationNo9      2006          7        27        9              6   \n",
              "52734       SpecialNo5      2006          7        27        9              6   \n",
              "52743  ConsolationNo10      2006          7        28       12              2   \n",
              "52747   ConsolationNo5      2006          7        28       12              2   \n",
              "52769   ConsolationNo4      2006          7        28       15              5   \n",
              "\n",
              "       DrawDayofyear  DrawIs_month_end  DrawIs_month_start  \\\n",
              "52728            190             False               False   \n",
              "52734            190             False               False   \n",
              "52743            193             False               False   \n",
              "52747            193             False               False   \n",
              "52769            196             False               False   \n",
              "\n",
              "       DrawIs_quarter_end  DrawIs_quarter_start  DrawIs_year_end  \\\n",
              "52728               False                 False            False   \n",
              "52734               False                 False            False   \n",
              "52743               False                 False            False   \n",
              "52747               False                 False            False   \n",
              "52769               False                 False            False   \n",
              "\n",
              "       DrawIs_year_start  DrawNo  DrawElapsed  LuckyNo  \n",
              "52728              False  270006   1152403200     8912  \n",
              "52734              False  270006   1152403200     8476  \n",
              "52743              False  270106   1152662400     1628  \n",
              "52747              False  270106   1152662400     8284  \n",
              "52769              False  270206   1152921600     2522  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "09XGqEUku4Bl",
        "colab": {}
      },
      "source": [
        "categorify = Categorify(small_cat_vars, small_cont_vars)\n",
        "categorify(small_train_df)\n",
        "categorify(small_test_df, test=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "enAi7pjWvCoA",
        "outputId": "1a911747-130e-429f-804c-4f6b08ec6373",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        }
      },
      "source": [
        "small_train_df.PrizeType.cat.categories"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['1stPrizeNo', '2ndPrizeNo', '3rdPrizeNo', 'ConsolationNo1',\n",
              "       'ConsolationNo10', 'ConsolationNo2', 'ConsolationNo3', 'ConsolationNo4',\n",
              "       'ConsolationNo5', 'ConsolationNo6', 'ConsolationNo7', 'ConsolationNo8',\n",
              "       'ConsolationNo9', 'SpecialNo1', 'SpecialNo10', 'SpecialNo2',\n",
              "       'SpecialNo3', 'SpecialNo4', 'SpecialNo5', 'SpecialNo6', 'SpecialNo7',\n",
              "       'SpecialNo8', 'SpecialNo9'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "zKbHZ3xYvIFv",
        "outputId": "fc7c7e6b-6295-4503-edf3-cc2b2ac2caaf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "small_train_df.PrizeType.cat.codes[:10]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "index": 35,
                  "values": 12
                },
                {
                  "index": 87,
                  "values": 18
                },
                {
                  "index": 97,
                  "values": 5
                },
                {
                  "index": 114,
                  "values": 22
                },
                {
                  "index": 127,
                  "values": 12
                },
                {
                  "index": 134,
                  "values": 19
                },
                {
                  "index": 144,
                  "values": 6
                },
                {
                  "index": 149,
                  "values": 11
                },
                {
                  "index": 164,
                  "values": 3
                },
                {
                  "index": 186,
                  "values": 2
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "values",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/plain": [
              "35     12\n",
              "87     18\n",
              "97      5\n",
              "114    22\n",
              "127    12\n",
              "134    19\n",
              "144     6\n",
              "149    11\n",
              "164     3\n",
              "186     2\n",
              "dtype: int8"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Xutlsh9kJRiP",
        "outputId": "f8e0f741-849d-4519-b765-1e89db443274",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "small_train_df.PrizeType.head(10)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "PrizeType": "ConsolationNo9",
                  "index": 35
                },
                {
                  "PrizeType": "SpecialNo5",
                  "index": 87
                },
                {
                  "PrizeType": "ConsolationNo2",
                  "index": 97
                },
                {
                  "PrizeType": "SpecialNo9",
                  "index": 114
                },
                {
                  "PrizeType": "ConsolationNo9",
                  "index": 127
                },
                {
                  "PrizeType": "SpecialNo6",
                  "index": 134
                },
                {
                  "PrizeType": "ConsolationNo3",
                  "index": 144
                },
                {
                  "PrizeType": "ConsolationNo8",
                  "index": 149
                },
                {
                  "PrizeType": "ConsolationNo1",
                  "index": 164
                },
                {
                  "PrizeType": "3rdPrizeNo",
                  "index": 186
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "constraints": {
                      "enum": [
                        "1stPrizeNo",
                        "2ndPrizeNo",
                        "3rdPrizeNo",
                        "ConsolationNo1",
                        "ConsolationNo10",
                        "ConsolationNo2",
                        "ConsolationNo3",
                        "ConsolationNo4",
                        "ConsolationNo5",
                        "ConsolationNo6",
                        "ConsolationNo7",
                        "ConsolationNo8",
                        "ConsolationNo9",
                        "SpecialNo1",
                        "SpecialNo10",
                        "SpecialNo2",
                        "SpecialNo3",
                        "SpecialNo4",
                        "SpecialNo5",
                        "SpecialNo6",
                        "SpecialNo7",
                        "SpecialNo8",
                        "SpecialNo9"
                      ]
                    },
                    "name": "PrizeType",
                    "ordered": true,
                    "type": "any"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/plain": [
              "35     ConsolationNo9\n",
              "87         SpecialNo5\n",
              "97     ConsolationNo2\n",
              "114        SpecialNo9\n",
              "127    ConsolationNo9\n",
              "134        SpecialNo6\n",
              "144    ConsolationNo3\n",
              "149    ConsolationNo8\n",
              "164    ConsolationNo1\n",
              "186        3rdPrizeNo\n",
              "Name: PrizeType, dtype: category\n",
              "Categories (23, object): [1stPrizeNo < 2ndPrizeNo < 3rdPrizeNo < ConsolationNo1 ... SpecialNo6 <\n",
              "                          SpecialNo7 < SpecialNo8 < SpecialNo9]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "4lTp1pX4v-kk",
        "colab": {}
      },
      "source": [
        "fill_missing = FillMissing(small_cat_vars, small_cont_vars)\n",
        "fill_missing(small_train_df)\n",
        "fill_missing(small_test_df, test=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Lnc36v4_wPej",
        "colab": {}
      },
      "source": [
        "FillMissing?"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "80VmVLlBJRig",
        "colab": {}
      },
      "source": [
        "import inspect\n",
        "Categorify??"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "tbsL5b0NwRRt",
        "outputId": "485cd044-fc27-485c-c203-5b58126adf55",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "source": [
        "small_train_df.info()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 3000 entries, 35 to 52725\n",
            "Data columns (total 16 columns):\n",
            "PrizeType               3000 non-null category\n",
            "DrawYear                3000 non-null category\n",
            "DrawMonth               3000 non-null category\n",
            "DrawWeek                3000 non-null category\n",
            "DrawDay                 3000 non-null category\n",
            "DrawDayofweek           3000 non-null category\n",
            "DrawDayofyear           3000 non-null category\n",
            "DrawIs_month_end        3000 non-null category\n",
            "DrawIs_month_start      3000 non-null category\n",
            "DrawIs_quarter_end      3000 non-null category\n",
            "DrawIs_quarter_start    3000 non-null category\n",
            "DrawIs_year_end         3000 non-null category\n",
            "DrawIs_year_start       3000 non-null category\n",
            "DrawNo                  3000 non-null int64\n",
            "DrawElapsed             3000 non-null int64\n",
            "LuckyNo                 3000 non-null int64\n",
            "dtypes: category(13), int64(3)\n",
            "memory usage: 154.7 KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "7kpqWTO-JRio",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "CBHTYhMCwdem"
      },
      "source": [
        "## Preparing full data set"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "i5iVvJwdqsb9",
        "colab_type": "text"
      },
      "source": [
        "### Shuffle"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i8tIwwT9qsb9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# from sklearn.utils import shuffle\n",
        "# df_processed = shuffle(df_processed)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "4NdF0S1TwnLT",
        "outputId": "b92116a1-1717-492c-a4dc-d458fabd32e7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 170
        }
      },
      "source": [
        "n = len(df_processed)\n",
        "print(n)\n",
        "print(n/23)\n",
        "print(df_processed['DrawDate'].min())\n",
        "print(df_processed['DrawDate'].max())\n",
        "\n",
        "\n",
        "split_percent = 0.75\n",
        "idx = n * split_percent\n",
        "print(idx)\n",
        "idx = int(idx // 23 * 23)\n",
        "print(idx)\n",
        "\n",
        "train_df = df_processed[:idx]\n",
        "test_df = df_processed[idx:]\n",
        "\n",
        "print(len(train_df), train_df.DrawDate.min(), train_df.DrawDate.max())\n",
        "print(len(test_df), test_df.DrawDate.min(), test_df.DrawDate.max())\n",
        "print(len(train_df) + len(test_df))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "104397\n",
            "4539.0\n",
            "1992-05-06 00:00:00\n",
            "2019-05-12 00:00:00\n",
            "78297.75\n",
            "78292\n",
            "78292 1992-05-06 00:00:00 2019-05-12 00:00:00\n",
            "26105 1992-05-06 00:00:00 2019-05-12 00:00:00\n",
            "104397\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "tbDG0RGVJRiv",
        "outputId": "039f12d2-4d25-4cfe-ea2f-e05943715cac",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 165
        }
      },
      "source": [
        "train_df.head(2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDate": "2012-05-12T00:00:00.000Z",
                  "DrawDay": 12,
                  "DrawDayofweek": 5,
                  "DrawDayofyear": 133,
                  "DrawElapsed": 1336780800,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 5,
                  "DrawNo": 370112,
                  "DrawWeek": 19,
                  "DrawYear": 2012,
                  "LuckyNo": 1976,
                  "PrizeType": "2ndPrizeNo",
                  "index": 75740
                },
                {
                  "DrawDate": "2017-10-22T00:00:00.000Z",
                  "DrawDay": 22,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 295,
                  "DrawElapsed": 1508630400,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 10,
                  "DrawNo": 467217,
                  "DrawWeek": 42,
                  "DrawYear": 2017,
                  "LuckyNo": 3197,
                  "PrizeType": "ConsolationNo1",
                  "index": 98075
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "DrawNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDate",
                    "type": "datetime"
                  },
                  {
                    "name": "PrizeType",
                    "type": "string"
                  },
                  {
                    "name": "LuckyNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawYear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawMonth",
                    "type": "integer"
                  },
                  {
                    "name": "DrawWeek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDay",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofweek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofyear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawIs_month_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_month_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawElapsed",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DrawNo</th>\n",
              "      <th>DrawDate</th>\n",
              "      <th>PrizeType</th>\n",
              "      <th>LuckyNo</th>\n",
              "      <th>DrawYear</th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>DrawIs_month_end</th>\n",
              "      <th>DrawIs_month_start</th>\n",
              "      <th>DrawIs_quarter_end</th>\n",
              "      <th>DrawIs_quarter_start</th>\n",
              "      <th>DrawIs_year_end</th>\n",
              "      <th>DrawIs_year_start</th>\n",
              "      <th>DrawElapsed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>75740</th>\n",
              "      <td>370112</td>\n",
              "      <td>2012-05-12</td>\n",
              "      <td>2ndPrizeNo</td>\n",
              "      <td>1976</td>\n",
              "      <td>2012</td>\n",
              "      <td>5</td>\n",
              "      <td>19</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>133</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>1336780800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98075</th>\n",
              "      <td>467217</td>\n",
              "      <td>2017-10-22</td>\n",
              "      <td>ConsolationNo1</td>\n",
              "      <td>3197</td>\n",
              "      <td>2017</td>\n",
              "      <td>10</td>\n",
              "      <td>42</td>\n",
              "      <td>22</td>\n",
              "      <td>6</td>\n",
              "      <td>295</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>1508630400</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       DrawNo   DrawDate       PrizeType  LuckyNo  DrawYear  DrawMonth  \\\n",
              "75740  370112 2012-05-12      2ndPrizeNo     1976      2012          5   \n",
              "98075  467217 2017-10-22  ConsolationNo1     3197      2017         10   \n",
              "\n",
              "       DrawWeek  DrawDay  DrawDayofweek  DrawDayofyear  DrawIs_month_end  \\\n",
              "75740        19       12              5            133             False   \n",
              "98075        42       22              6            295             False   \n",
              "\n",
              "       DrawIs_month_start  DrawIs_quarter_end  DrawIs_quarter_start  \\\n",
              "75740               False               False                 False   \n",
              "98075               False               False                 False   \n",
              "\n",
              "       DrawIs_year_end  DrawIs_year_start  DrawElapsed  \n",
              "75740            False              False   1336780800  \n",
              "98075            False              False   1508630400  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "XhNtN7sLJRi1",
        "outputId": "5999afcf-2c01-4488-f2e5-ce2e384219da",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        }
      },
      "source": [
        "test_df.head(1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDate": "2018-08-26T00:00:00.000Z",
                  "DrawDay": 26,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 238,
                  "DrawElapsed": 1535241600,
                  "DrawIs_month_end": false,
                  "DrawIs_month_start": false,
                  "DrawIs_quarter_end": false,
                  "DrawIs_quarter_start": false,
                  "DrawIs_year_end": false,
                  "DrawIs_year_start": false,
                  "DrawMonth": 8,
                  "DrawNo": 482218,
                  "DrawWeek": 34,
                  "DrawYear": 2018,
                  "LuckyNo": 9444,
                  "PrizeType": "ConsolationNo10",
                  "index": 101526
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "DrawNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDate",
                    "type": "datetime"
                  },
                  {
                    "name": "PrizeType",
                    "type": "string"
                  },
                  {
                    "name": "LuckyNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawYear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawMonth",
                    "type": "integer"
                  },
                  {
                    "name": "DrawWeek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDay",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofweek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofyear",
                    "type": "integer"
                  },
                  {
                    "name": "DrawIs_month_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_month_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_quarter_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_end",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawIs_year_start",
                    "type": "boolean"
                  },
                  {
                    "name": "DrawElapsed",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DrawNo</th>\n",
              "      <th>DrawDate</th>\n",
              "      <th>PrizeType</th>\n",
              "      <th>LuckyNo</th>\n",
              "      <th>DrawYear</th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>DrawIs_month_end</th>\n",
              "      <th>DrawIs_month_start</th>\n",
              "      <th>DrawIs_quarter_end</th>\n",
              "      <th>DrawIs_quarter_start</th>\n",
              "      <th>DrawIs_year_end</th>\n",
              "      <th>DrawIs_year_start</th>\n",
              "      <th>DrawElapsed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>101526</th>\n",
              "      <td>482218</td>\n",
              "      <td>2018-08-26</td>\n",
              "      <td>ConsolationNo10</td>\n",
              "      <td>9444</td>\n",
              "      <td>2018</td>\n",
              "      <td>8</td>\n",
              "      <td>34</td>\n",
              "      <td>26</td>\n",
              "      <td>6</td>\n",
              "      <td>238</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>1535241600</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        DrawNo   DrawDate        PrizeType  LuckyNo  DrawYear  DrawMonth  \\\n",
              "101526  482218 2018-08-26  ConsolationNo10     9444      2018          8   \n",
              "\n",
              "        DrawWeek  DrawDay  DrawDayofweek  DrawDayofyear  DrawIs_month_end  \\\n",
              "101526        34       26              6            238             False   \n",
              "\n",
              "        DrawIs_month_start  DrawIs_quarter_end  DrawIs_quarter_start  \\\n",
              "101526               False               False                 False   \n",
              "\n",
              "        DrawIs_year_end  DrawIs_year_start  DrawElapsed  \n",
              "101526            False              False   1535241600  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "DwSkbsZeyfJB",
        "colab": {}
      },
      "source": [
        "# Data normalization proceses\n",
        "procs=[FillMissing, Categorify, Normalize]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "pRSdjjeJJRi9",
        "colab": {}
      },
      "source": [
        "# Set continuous and categorical columns\n",
        "#cont_vars = [\"DrawNo\", \"DrawElapsed\"]\n",
        "cont_vars = [\"DrawDayofyear\"]\n",
        "#cat_vars = [\"PrizeType\", \"DrawYear\", \"DrawMonth\", \"DrawWeek\", \"DrawDay\", \"DrawDayofweek\", \n",
        "#                  \"DrawDayofyear\",\"DrawIs_month_end\",\"DrawIs_month_start\", \"DrawIs_quarter_end\", \"DrawIs_quarter_start\", \"DrawIs_year_end\", \"DrawIs_year_start\"]\n",
        "cat_vars = [\"DrawMonth\", \"DrawWeek\", \"DrawDay\", \"DrawDayofweek\"]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "NX6sRVnFJRi_",
        "colab": {}
      },
      "source": [
        "dep_var = 'LuckyNo'"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "K08LmXY_JRjB",
        "colab": {}
      },
      "source": [
        "df = train_df[cat_vars + cont_vars + [dep_var,'DrawDate']].copy()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "yzK1iibUc1jF",
        "colab": {}
      },
      "source": [
        "train_df = train_df[cat_vars + cont_vars + [dep_var,'DrawDate']].copy()\n",
        "test_df = test_df[cat_vars + cont_vars + [dep_var,'DrawDate']].copy()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "pTtBKYQgJRjE",
        "outputId": "c29c5a78-d366-4f8e-f808-2a5b45a1ec77",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# Min and max draw date\n",
        "test_df['DrawDate'].min(), test_df['DrawDate'].max()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(Timestamp('1992-05-06 00:00:00'), Timestamp('2019-05-12 00:00:00'))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "psovR8pRJRjJ"
      },
      "source": [
        "### Create a validation set"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "2M08ikGlJRjK",
        "outputId": "282537c9-c19f-4cda-997b-7704453d8f9f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# 1st criteria - of the same date\n",
        "# 2nd criteria - >= len(test_df)\n",
        "\n",
        "cut = train_df['DrawDate'][(train_df['DrawDate'] == train_df['DrawDate'][len(test_df)])].index.max()\n",
        "print(cut)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "26127\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "iEdDShxec1jL",
        "outputId": "1f4e861b-58e4-403f-e4e7-3c64cb513b3a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "train_df.head(5)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDate": "2012-05-12T00:00:00.000Z",
                  "DrawDay": 12,
                  "DrawDayofweek": 5,
                  "DrawDayofyear": 133,
                  "DrawMonth": 5,
                  "DrawWeek": 19,
                  "LuckyNo": 1976,
                  "index": 75740
                },
                {
                  "DrawDate": "2017-10-22T00:00:00.000Z",
                  "DrawDay": 22,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 295,
                  "DrawMonth": 10,
                  "DrawWeek": 42,
                  "LuckyNo": 3197,
                  "index": 98075
                },
                {
                  "DrawDate": "2008-12-21T00:00:00.000Z",
                  "DrawDay": 21,
                  "DrawDayofweek": 6,
                  "DrawDayofyear": 356,
                  "DrawMonth": 12,
                  "DrawWeek": 51,
                  "LuckyNo": 2272,
                  "index": 62009
                },
                {
                  "DrawDate": "2016-10-15T00:00:00.000Z",
                  "DrawDay": 15,
                  "DrawDayofweek": 5,
                  "DrawDayofyear": 289,
                  "DrawMonth": 10,
                  "DrawWeek": 41,
                  "LuckyNo": 6030,
                  "index": 93896
                },
                {
                  "DrawDate": "2003-05-10T00:00:00.000Z",
                  "DrawDay": 10,
                  "DrawDayofweek": 5,
                  "DrawDayofyear": 130,
                  "DrawMonth": 5,
                  "DrawWeek": 19,
                  "LuckyNo": 411,
                  "index": 40346
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "DrawMonth",
                    "type": "integer"
                  },
                  {
                    "name": "DrawWeek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDay",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofweek",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDayofyear",
                    "type": "integer"
                  },
                  {
                    "name": "LuckyNo",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDate",
                    "type": "datetime"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>DrawMonth</th>\n",
              "      <th>DrawWeek</th>\n",
              "      <th>DrawDay</th>\n",
              "      <th>DrawDayofweek</th>\n",
              "      <th>DrawDayofyear</th>\n",
              "      <th>LuckyNo</th>\n",
              "      <th>DrawDate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>75740</th>\n",
              "      <td>5</td>\n",
              "      <td>19</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>133</td>\n",
              "      <td>1976</td>\n",
              "      <td>2012-05-12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98075</th>\n",
              "      <td>10</td>\n",
              "      <td>42</td>\n",
              "      <td>22</td>\n",
              "      <td>6</td>\n",
              "      <td>295</td>\n",
              "      <td>3197</td>\n",
              "      <td>2017-10-22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62009</th>\n",
              "      <td>12</td>\n",
              "      <td>51</td>\n",
              "      <td>21</td>\n",
              "      <td>6</td>\n",
              "      <td>356</td>\n",
              "      <td>2272</td>\n",
              "      <td>2008-12-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93896</th>\n",
              "      <td>10</td>\n",
              "      <td>41</td>\n",
              "      <td>15</td>\n",
              "      <td>5</td>\n",
              "      <td>289</td>\n",
              "      <td>6030</td>\n",
              "      <td>2016-10-15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40346</th>\n",
              "      <td>5</td>\n",
              "      <td>19</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>130</td>\n",
              "      <td>411</td>\n",
              "      <td>2003-05-10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       DrawMonth  DrawWeek  DrawDay  DrawDayofweek  DrawDayofyear  LuckyNo  \\\n",
              "75740          5        19       12              5            133     1976   \n",
              "98075         10        42       22              6            295     3197   \n",
              "62009         12        51       21              6            356     2272   \n",
              "93896         10        41       15              5            289     6030   \n",
              "40346          5        19       10              5            130      411   \n",
              "\n",
              "        DrawDate  \n",
              "75740 2012-05-12  \n",
              "98075 2017-10-22  \n",
              "62009 2008-12-21  \n",
              "93896 2016-10-15  \n",
              "40346 2003-05-10  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "rlJZ7WvXc1jN",
        "outputId": "4bc96267-518d-4f79-b8ee-569020143e71",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "train_df['DrawDate'][(train_df['DrawDate'] == train_df['DrawDate'][len(test_df)])].tail(10)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26126
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26105
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26106
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26119
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26116
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26120
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26115
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26108
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26111
                },
                {
                  "DrawDate": "1999-07-18T00:00:00.000Z",
                  "index": 26112
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "DrawDate",
                    "type": "datetime"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/plain": [
              "26126   1999-07-18\n",
              "26105   1999-07-18\n",
              "26106   1999-07-18\n",
              "26119   1999-07-18\n",
              "26116   1999-07-18\n",
              "26120   1999-07-18\n",
              "26115   1999-07-18\n",
              "26108   1999-07-18\n",
              "26111   1999-07-18\n",
              "26112   1999-07-18\n",
              "Name: DrawDate, dtype: datetime64[ns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "825smVEzJRjL",
        "outputId": "91c06c0b-fe5e-41b0-8d83-1b75da3d8f11",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "valid_idx = range(cut)\n",
        "print(valid_idx)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "range(0, 26127)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "IPUHYMiQzWof",
        "colab": {}
      },
      "source": [
        "# train_idx = len(train_df) - cut\n",
        "# valid_idx = range(train_idx + 1, train_idx + cut)\n",
        "# train_idx = range(train_idx)\n",
        "# print(train_idx)\n",
        "# print(valid_idx)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "CQf46HenJRjO",
        "outputId": "1595beb3-2ee7-4389-aedd-e7bf23b1e814",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        }
      },
      "source": [
        "df[dep_var].head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.dataresource+json": {
              "data": [
                {
                  "LuckyNo": 1976,
                  "index": 75740
                },
                {
                  "LuckyNo": 3197,
                  "index": 98075
                },
                {
                  "LuckyNo": 2272,
                  "index": 62009
                },
                {
                  "LuckyNo": 6030,
                  "index": 93896
                },
                {
                  "LuckyNo": 411,
                  "index": 40346
                }
              ],
              "schema": {
                "fields": [
                  {
                    "name": "index",
                    "type": "integer"
                  },
                  {
                    "name": "LuckyNo",
                    "type": "integer"
                  }
                ],
                "pandas_version": "0.20.0",
                "primaryKey": [
                  "index"
                ]
              }
            },
            "text/plain": [
              "75740    1976\n",
              "98075    3197\n",
              "62009    2272\n",
              "93896    6030\n",
              "40346     411\n",
              "Name: LuckyNo, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "eJ7BbqQOJRjS"
      },
      "source": [
        "## Train"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "zvFwyNMfJRjS",
        "colab": {}
      },
      "source": [
        "path = Path('datasets/lotto')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "NclUP3xdJRjT",
        "colab": {}
      },
      "source": [
        "data = (TabularList.from_df(df, path=path, cat_names=cat_vars, cont_names=cont_vars, procs=procs)\n",
        "                .split_by_idx(valid_idx)\n",
        "                .label_from_df(cols=dep_var, label_cls=FloatList, log=True)\n",
        "                #.label_from_df(cols=dep_var, label_cls=CategoryList)\n",
        "                .add_test(TabularList.from_df(test_df, path=path, cat_names=cat_vars, cont_names=cont_vars))\n",
        "                .databunch())\n",
        "# FloatList?\n",
        "# CategoryList?"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "ULMiGgN6yB9J",
        "outputId": "63afcf1c-4487-4f4e-fb30-2db6aa51e4a2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        }
      },
      "source": [
        "data"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "TabularDataBunch;\n",
              "\n",
              "Train: LabelList\n",
              "y: FloatList (52165 items)\n",
              "[FloatItem 8.883918, FloatItem 9.192787, FloatItem 8.570734, FloatItem 8.993054, FloatItem 7.74457]...\n",
              "Path: datasets/lotto\n",
              "x: TabularList (52165 items)\n",
              "[TabularLine DrawMonth 4; DrawWeek 14; DrawDay 7; DrawDayofweek 3; DrawDayofyear -0.8060; , TabularLine DrawMonth 12; DrawWeek 53; DrawDay 29; DrawDayofweek 2; DrawDayofyear 1.7136; , TabularLine DrawMonth 8; DrawWeek 34; DrawDay 24; DrawDayofweek 5; DrawDayofyear 0.5151; , TabularLine DrawMonth 4; DrawWeek 14; DrawDay 6; DrawDayofweek 5; DrawDayofyear -0.8060; , TabularLine DrawMonth 9; DrawWeek 36; DrawDay 7; DrawDayofweek 5; DrawDayofyear 0.6472; ]...\n",
              "Path: datasets/lotto;\n",
              "\n",
              "Valid: LabelList\n",
              "y: FloatList (26127 items)\n",
              "[FloatItem 7.58883, FloatItem 8.069968, FloatItem 7.728416, FloatItem 8.704502, FloatItem 6.0185933]...\n",
              "Path: datasets/lotto\n",
              "x: TabularList (26127 items)\n",
              "[TabularLine DrawMonth 5; DrawWeek 19; DrawDay 12; DrawDayofweek 5; DrawDayofyear -0.4663; , TabularLine DrawMonth 10; DrawWeek 42; DrawDay 22; DrawDayofweek 6; DrawDayofyear 1.0624; , TabularLine DrawMonth 12; DrawWeek 51; DrawDay 21; DrawDayofweek 6; DrawDayofyear 1.6381; , TabularLine DrawMonth 10; DrawWeek 41; DrawDay 15; DrawDayofweek 5; DrawDayofyear 1.0058; , TabularLine DrawMonth 5; DrawWeek 19; DrawDay 10; DrawDayofweek 5; DrawDayofyear -0.4946; ]...\n",
              "Path: datasets/lotto;\n",
              "\n",
              "Test: LabelList\n",
              "y: EmptyLabelList (26105 items)\n",
              "[EmptyLabel , EmptyLabel , EmptyLabel , EmptyLabel , EmptyLabel ]...\n",
              "Path: .\n",
              "x: TabularList (26105 items)\n",
              "[TabularLine DrawMonth 8; DrawWeek 34; DrawDay 26; DrawDayofweek 6; DrawDayofyear 0.5246; , TabularLine DrawMonth 10; DrawWeek 43; DrawDay 23; DrawDayofweek 2; DrawDayofyear 1.0719; , TabularLine DrawMonth 8; DrawWeek 32; DrawDay 9; DrawDayofweek 2; DrawDayofyear 0.3641; , TabularLine DrawMonth 3; DrawWeek 12; DrawDay 20; DrawDayofweek 1; DrawDayofyear -0.9664; , TabularLine DrawMonth 7; DrawWeek 31; DrawDay 31; DrawDayofweek 2; DrawDayofyear 0.2886; ]...\n",
              "Path: datasets/lotto"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "-yCl0twwJRjV"
      },
      "source": [
        "### Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "kQnJ0mT9JRjV",
        "outputId": "6ff5a915-7875-4cb9-a36d-6a04a4e078c1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        }
      },
      "source": [
        "print(np.max(train_df[dep_var]))\n",
        "print(np.log(np.max(train_df[dep_var])))\n",
        "max_log_y = np.log(np.max(train_df[dep_var]) * 1.0)\n",
        "y_range = torch.tensor([0, max_log_y], device=defaults.device)\n",
        "print(max_log_y, y_range)\n",
        "print(y_range.dtype)\n",
        "\n",
        "#y_range = torch.tensor([0, 9999], dtype=torch.long, device=defaults.device)\n",
        "#print(y_range)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "9999\n",
            "9.21024036697585\n",
            "9.21024036697585 tensor([0.0000, 9.2102])\n",
            "torch.float32\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Bm-lBz87JRjW",
        "colab": {}
      },
      "source": [
        "learn = tabular_learner(data, layers=[1000,500], ps=[0.001,0.01], emb_drop=0.04, \n",
        "                        #y_range=y_range, metrics=accuracy)                        \n",
        "                        y_range=y_range, metrics=exp_rmspe)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "MQB9Eq2RJRjb",
        "colab": {}
      },
      "source": [
        "# doc(tabular_learner)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Cmg7aOiiJRjd",
        "outputId": "5e4aa377-fdf2-4a96-b16f-40d0e3f6eaab",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        }
      },
      "source": [
        "learn.model"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "TabularModel(\n",
              "  (embeds): ModuleList(\n",
              "    (0): Embedding(13, 7)\n",
              "    (1): Embedding(54, 15)\n",
              "    (2): Embedding(32, 11)\n",
              "    (3): Embedding(6, 4)\n",
              "  )\n",
              "  (emb_drop): Dropout(p=0.04)\n",
              "  (bn_cont): BatchNorm1d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "  (layers): Sequential(\n",
              "    (0): Linear(in_features=38, out_features=1000, bias=True)\n",
              "    (1): ReLU(inplace)\n",
              "    (2): BatchNorm1d(1000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "    (3): Dropout(p=0.001)\n",
              "    (4): Linear(in_features=1000, out_features=500, bias=True)\n",
              "    (5): ReLU(inplace)\n",
              "    (6): BatchNorm1d(500, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "    (7): Dropout(p=0.01)\n",
              "    (8): Linear(in_features=500, out_features=1, bias=True)\n",
              "  )\n",
              ")"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "JaZQqsvfJRje",
        "outputId": "e4fc6b5c-5e67-4576-8b77-6d90b8a56ca0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "len(data.train_ds.cont_names)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "kyT9HU-LJRji",
        "outputId": "bb770ef3-e1e4-4ffa-fd95-7f5a80d254e9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "learn.lr_find()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "LR Finder is complete, type {learner_name}.recorder.plot() to see the graph.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "vAyOUM7wJRjk",
        "outputId": "32f56120-c87a-4db4-8b4b-cc69d8a80c39",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 290
        }
      },
      "source": [
        "learn.recorder.plot()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "rRqmRng5JRjn",
        "outputId": "3e26360e-b3d3-4e38-ed06-3d69f8718d15",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "learn.fit_one_cycle(1, 1e-04, wd=0.2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Total time: 00:25 <p><table style='width:300px; margin-bottom:10px'>\n",
              "  <tr>\n",
              "    <th>epoch</th>\n",
              "    <th>train_loss</th>\n",
              "    <th>valid_loss</th>\n",
              "    <th>exp_rmspe</th>\n",
              "  </tr>\n",
              "  <tr>\n",
              "    <th>1</th>\n",
              "    <th>inf</th>\n",
              "    <th>nan</th>\n",
              "    <th>nan</th>\n",
              "  </tr>\n",
              "</table>\n"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "IDxVjdaoJRjp",
        "colab": {}
      },
      "source": [
        "learn.save('1')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "VsgKgrIDc1jv",
        "outputId": "86ce45b3-2404-44bc-e156-dfefe44b4586",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 164
        }
      },
      "source": [
        "learn.recorder.plot_losses(last=-1)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-143-0b26919095ad>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecorder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot_losses\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlast\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m: plot_losses() got an unexpected keyword argument 'last'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "mM2ORUowc1jw",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}